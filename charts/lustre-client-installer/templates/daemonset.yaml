apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "lustre-client-installer.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "lustre-client-installer.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "lustre-client-installer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "lustre-client-installer.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "lustre-client-installer.serviceAccountName" . }}
      hostPID: true
      restartPolicy: Always
      {{- if .Values.daemonset.tolerations }}
      {{- if gt (len .Values.daemonset.tolerations) 0 }}
      tolerations:
        {{- toYaml .Values.daemonset.tolerations | nindent 8 }}
      {{- end }}
      {{- end }}
      
      {{- if .Values.daemonset.affinity }}
      {{- if gt (len .Values.daemonset.affinity) 0 }}
      affinity:
        {{- toYaml .Values.daemonset.affinity | nindent 8 }}
      {{- end }}
      {{- end }}
      volumes:
        - name: lustre-client-volume
          configMap:
            name: {{ include "lustre-client-installer.fullname" . }}-cm
        - name: host-mount
          hostPath:
            path: /tmp/lustre
      initContainers:
        - name: lustre-client-installer
          image: {{ .Values.daemonset.initContainer.image }}
          imagePullPolicy: {{ .Values.daemonset.initContainer.pullPolicy }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          args:
            - bash
            - setup.sh
          volumeMounts:
            - name: lustre-client-volume
              mountPath: /tmp/lustre-client-install.sh
              subPath: lustre-client-install.sh
            - name: lustre-client-volume
              mountPath: /tmp/wait.sh
              subPath: wait.sh
            - name: lustre-client-volume
              mountPath: /setup.sh
              subPath: setup.sh
            - name: host-mount
              mountPath: /host
      containers:
        - name: pause
          image: {{ .Values.daemonset.pauseContainer.image }}
          imagePullPolicy: {{ .Values.daemonset.pauseContainer.pullPolicy }}
          securityContext:  
            allowPrivilegeEscalation: false  
            runAsUser: 1000  
            readOnlyRootFilesystem: true